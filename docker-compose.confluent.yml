version: '3.8'

services:
  broker:
    image: confluentinc/cp-kafka:7.4.0
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:9093"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
    volumes:
      - kafka_data:/var/lib/kafka/data
    user: appuser:appuser
    command: >
      bash -c "
        mkdir -p /var/lib/kafka/data &&
        chown -R appuser:appuser /var/lib/kafka/data &&
        /etc/confluent/docker/run
      "
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  topic-creator:
    image: confluentinc/cp-kafka:7.4.0
    container_name: topic-creator
    depends_on:
      broker:
        condition: service_healthy
    volumes:
      - ./create-topics-confluent.sh:/create-topics.sh
    network_mode: "service:broker"
    entrypoint: ["/bin/sh"]
    command: ["-c", "echo 'Testing Kafka connection...'; kafka-topics --bootstrap-server localhost:9092 --list; echo 'Running topic creation script...'; /create-topics.sh; echo 'Topic creation completed. Keeping container alive...'; tail -f /dev/null"]

volumes:
  kafka_data:

networks:
  kafka-network:
    driver: bridge 